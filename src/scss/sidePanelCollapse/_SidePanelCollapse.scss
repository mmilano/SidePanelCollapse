/*! **********
 * SidePanelCollapse v1.3.2
 * A Bootstrap 4-based sidebar augmenting the "collapse" component to collapse horizontally,
 * and allow variable duration timings for the transitions
 *
 * Main (universal) SCSS for the sidePanel
 *
 * NOTE: * these values for ".sidePanel" control the behavior - NOT THE VISUAL STYLE - of the sidePanel.
 *
 * Michel Milano
 * 2023
 * MIT License
 */

// sidePanel transitions
$sidePanel-transition-function:           ease-in !default;

// default sidePanel transition durations
$sidePanel-duration-show:                 1.05s !default;  // responsive without being too fast
$sidePanel-duration-hide:                 0.35s !default;  // prompt
$sidePanel-duration-hide-fast:            0.13s !default;  // very fast

// backdrop values
$sidePanel-zindex:                        $zindex-fixed + 1 !default;        // first: define a z-index based on Bootstrap v4 default nav, plus 1, to put .sidePanel above the nav
$sidePanel-backdrop-zindex:               $sidePanel-zindex - 100 !default;  // then, for backdrop: enough to be under .sidePanel, but over the main page content
$sidePanel-backdrop-opacity-max:          1 !default;

// note: the backdrop translucency is baked into the background color itself (via the alpha channel), and not with a separate opacity value.
$sidePanel-backdrop-dark:                 rgba(#000, 0.51) !default;
$sidePanel-backdrop-light:                rgba(#FFF, 0.6) !default;

// backdrop transition durations
$sidePanel-backdrop-duration-show:        0.33s !default;
$sidePanel-backdrop-duration-hide:        0.17s !default;

.sidePanel {
    // output the duration values as css variables so that they only have to be declared in one place, and
    // the page's javascript can access/extract them when needed.
    // see sidePanel.js for usage of the values.
    // scoped locally to .sidePanel.
    --durationShow: #{$sidePanel-duration-show};
    --durationHide: #{$sidePanel-duration-hide};
    --durationHideFast: #{$sidePanel-duration-hide-fast};

    // transition properties
    // default on load to have no transition duration (therefore no effect) so that there is no slide-out animation shown when the page first loads (in some cases).
    // Bootstrap collapse will change the width (not height) because '.width' is in the HTML
    transition-property: width;
    transition-timing-function: $sidePanel-transition-function;

    // .collapsing is applied & removed by the Bootstrap collapse function during both open and close transitions
    &.collapsing {
        width: 0;

        // duration value defined to use the css variable rather than scss variable so that the duration can be customized at runtime.
        // if this is never going to happen, this could be simplified to use the SCSS variable instead of the CSS variable (as in the next commented-out line)
        // transition-duration: $sidePanel-duration-show;
        transition-duration: var(--durationShow);  // default duration. will be in effect for opening the sidePanel, but is overridden by javascript when closing
    }
}

// backdrop = the full-page background displayed when sidenav is displayed (open).
// intended to screen the existing page content.
.sidePanel-backdrop {
    z-index: $sidePanel-backdrop-zindex;
    display: none;

    position: fixed;
    // covers the entire window
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;

    opacity: 0;  // default opacity. will be changed by the animation when backdrop displays

    background-color: $sidePanel-backdrop-light;  // "light" is the default

    // in effect, fadeout is the default
    animation: backdropFadeOut $sidePanel-backdrop-duration-hide linear;

    // when the fadein class is applied, fadein animation will be in effect
    &.fadein {
        animation: backdropFadeIn $sidePanel-backdrop-duration-show linear forwards;
    }

    &.show {
        display: block;
    }

    // light version. established as the default, so additional rule is not necessary
    // note: it is still applied in the javascript however.
    // &.light {
    //     background-color: $sidePanel-backdrop-light;
    // }

    // dark version
    &.dark {
        background-color: $sidePanel-backdrop-dark;
    }
}

// animation: softly fade IN the backdrop
@keyframes backdropFadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: $sidePanel-backdrop-opacity-max;
    }
}

// animation: softly fade OUT the backdrop
// this keyframes rule is the reverse of backdropIn;
// this _should_ be possible to do by reversing backdropIn, but that doesnt appear to work as one might think,
// hence another set of keyframes
@keyframes backdropFadeOut {
    0% {
        opacity: $sidePanel-backdrop-opacity-max;
    }
    100% {
        opacity: 0;
    }
}
