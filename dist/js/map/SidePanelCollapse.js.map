{"version":3,"sources":["SidePanelCollapse.js"],"names":["window","SidePanelCollapse","define","amd","module","exports","self","_proto","prototype","data_selector","defineSettings","defaults","options","_settings","Object","assign","backdrop","durationShowIsCustom","undefined","durationShow","styles","getComputedStyle","document","querySelector","sidepanelElement","sidepanelCloseElement","getPropertyValue","durationHide","durationHideFast","sidePanelIsOpenClass","backdropStyleClass","handleLinks","linkHandle","linkEvent","destination","e","location","preventDefault","closeType","$sidepanel","one","target","href","close","isCollapsing","classList","contains","handleKey","key","keyCode","show","collapse","hide","open","whenTransitionEnds","_this","handler","addEventListener","body","add","settings","style","transitionDuration","closeQueued","_duration","removeEventListener","remove","Backdrop","element","whenAnimationEnds","once","passive","_sidepanel","create","el","createElement","className","insert","appendChild","_$sidepanel","$","length","console","error","warn","bind","setProperty","on","sidepanelCloseButton","sidepanelLinks","getElementsByTagName","ln","i","initOnData","SidePanel","list","querySelectorAll","forEach","push","id","readyState"],"mappings":"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","sourcesContent":["/*! **********\n * SidePanelCollapse v1.0.0\n * A Bootstrap 4-based sidebar augmenting the \"collapse\" component to collapse horizontally,\n * and allow variable duration timings for the transitions\n *\n * Michel Milano\n * MIT License\n */\n\n/* jshint latedef: nofunc */\n/* globals define, self, SidePanel */\n\n// UMD template\n(function(window, SidePanelCollapse) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD\n        define([], SidePanelCollapse);\n    } else if (typeof module === \"object\" && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports, like Node.\n        module.exports = SidePanelCollapse();\n    } else {\n        // Browser global (root is window)\n        window.SidePanelCollapse = SidePanelCollapse();\n    }\n} (typeof self !== \"undefined\" ? self : this, function() {\n    \"use strict\";\n\n    var _proto = SidePanelCollapse.prototype;  // convenience shorthand\n\n    var data_selector = \"[data-sidepanel-collapse]\";  // selector for creation via data attribute\n\n    // make one single set of settings from defaults and any options passed in on construction\n    function defineSettings(defaults, options) {\n\n        // start with the defaults\n        let _settings = Object.assign({}, defaults);\n\n        // reconcile with any provided options that will supercede/overwrite defaults\n        Object.assign(_settings, options);\n\n        // if backdrop is anything other than \"true\", it is false\n        _settings.backdrop = (_settings.backdrop === true) ? true : false;\n\n        // create a flag for the durationShow setting because it is a special case.\n        // see SidePanelCollapse constructor.\n        _settings.durationShowIsCustom = (options !== undefined && options.durationShow !== undefined) ? true : false;\n\n        return _settings;\n    }\n\n    // default values\n    // includes the access of the css variable values as module is instantiated\n    let styles = getComputedStyle(document.querySelector(\".sidepanel\"));\n    var defaults = {\n\n        // css selectors:\n        // default selectors for the sidepanel DOM elements\n        sidepanelElement: \"#sidePanel\",  // top-level of the sidepanel\n        sidepanelCloseElement: \".sidePanel-close\",  // the close button, containing the close icon, visible when the sidepanel is displayed\n\n        // extract and update the css transition values:\n        // doing this so that the duration values do not have to be repeated in the javascript,\n        // and there is only one declaration (e.g. if the defaults are changed).\n        // if these are defined as .js values instead, the durations need to be in seconds (css transition format)\n        //\n        // css transition-durations:\n        // default values for the sidepanel transition timings are in css transition-duration format. e.g.:\n        //     durationShow: \"1.65s\",  // leisurely opening\n        durationShow: styles.getPropertyValue(\"--durationShow\"),\n        durationHide: styles.getPropertyValue(\"--durationHide\"),\n        durationHideFast: styles.getPropertyValue(\"--durationHideFast\"),\n\n        // HTML class attribute:\n        // class that is added to the document's <body> element when sidepanel shows, removed when it hides.\n        // this is a convenience - for use in enabling any specific styles that should apply when sidepanel is open.\n        sidePanelIsOpenClass: \"sidepanel-open\",\n\n        // boolean:\n        // whether or not a backdrop, or overlay, should display behind the sidepanel\n        backdrop: true,\n\n        // HTML class attribute:\n        // which color style of backdrop to use: \"dark\", or \"light\".\n        // corresponds to the css styles (e.g. \"light\" -> \".light\")\n        backdropStyleClass: \"light\",\n\n        // boolean:\n        // whether sidepanel should enable special behavior for <a> links in the sidepanel.\n        // currently, the behavior is to intercept the link click, close the sidepanel using the HideFast duration, and then follow the link\n        handleLinks: true,\n    };\n\n    // link callback:\n    // when a link is clicked,\n    // close the panel - fast mode.\n    // then, when panel is closed, go to destination of link.\n    function linkHandle() {\n\n        function linkEvent(destination) {\n            return function(e) {\n                // ...if anything needs to be done with e here...\n                window.location = destination;\n            };\n        }\n\n        // return function with closure. used for the link eventListener\n        return function(e) {\n            e.preventDefault();\n            this.closeType = \"fast\";\n            // create link event handler with closure\n            this.$sidepanel.one(\"hidden.bs.collapse\", linkEvent(e.target.href));\n            this.close();\n        };\n    }\n\n    // determine if the sidepanel is currently transitioning or not\n    // '.collapsing' is applied to the element by Bootstrap during the transition, removed when finished\n    _proto.isCollapsing = function() {\n        return this.$sidepanel[0].classList.contains(\"collapsing\");\n    };\n\n    // key press handler\n    // when the sidenav is displayed (open), ESC will close.\n    // expects: invoked as event callback, with .bind(the main sidepanel object) (i.e. .bind(this))\n    // (which is done as the default in constructor)\n    _proto.handleKey = function(e) {\n        let key = e.keyCode;\n\n        switch(key) {\n            case 27: // 'esc'\n                this.close(e);\n                break;\n        }\n    };\n\n    // manually activate the 'show' action\n    _proto.show = function() {\n        this.$sidepanel.collapse(\"show\");  // invoke Bootstrap action in jquery land\n    };\n\n    // manually activate the 'hide' action\n    _proto.hide = function() {\n        this.$sidepanel.collapse(\"hide\");  // invoke Bootstrap action in jquery land\n    };\n\n    // OPEN the sidepanel\n    // expects to be called with this = the sidepanel object (e.g. via .bind(this))\n    // (which is done as the default in constructor)\n    _proto.open = function(e) {\n\n        // return a function as the event handler\n        // of things to do when when the sidebar opening is completed.\n        // presumes: event is on the sidepanel DOM element itself.\n        function whenTransitionEnds(_this) {\n            var handler = function() {};\n            //var handler = function(e) {\n                // no action currently\n            //};\n            return handler;\n        }\n\n        // if open is invoked via default bootstrap behavior, then .collapse(\"show\") will have been invoked by bootstrap already,\n        // and event will exist (e.g. click).\n        // if called programmatically, e will not exist, and \"show\" will need to be called manually.\n        // dev todo: there might be a better way to do this\n        if (e === undefined) {\n            this.show();\n        }\n\n        // initiate the showing of backdrop if truthy\n        if (this.backdrop) {\n            this.backdrop.show(this.$sidepanel);\n        }\n\n        // set keyup event handler - to catch ESC key and close sidepanel if pressed\n        document.addEventListener(\"keyup\", this.handleKey);\n\n        // jquery event listener to run ONCE on the Bootstrap \"is shown\" event\n        this.$sidepanel.one(\"shown.bs.collapse\", whenTransitionEnds(this));\n\n        // add a class to the document's <body>.\n        // for potential use to enable any styles to apply only when sidepanel is open\n        document.body.classList.add(this.settings.sidePanelIsOpenClass);\n    };\n\n    // CLOSE the sidepanel\n    // usually invoked as event callback\n    // expects to be called with this = the sidepanel object (e.g. via .bind(this))\n    // (which is done as the default in constructor)\n    _proto.close = function(e) {\n\n        // event handler:\n        // when hiding/closing is complete, remove the transition duration override so that\n        // the fallback, css-defined duration, will apply when the sidebar is shown/opened again.\n        // presumes event is on the sidenav DOM element itself.\n        function whenTransitionEnds(e) {\n            e.target.style.transitionDuration = null;\n        }\n\n        // check to see if collapsing is in progress.\n        // if so, interrupt the normal close process, reroute via event, and exit early,\n        // so that when the transition is finished, it will then go and immediately start to close\n        if (this.isCollapsing() && !this.closeQueued) {\n            // not already queued, so queue up to close immediately when transition has finished, and return out.\n            this.closeQueued = true;\n            this.closeType = \"fast\";\n            this.$sidepanel.one(\"shown.bs.collapse\", this.close);\n            return;\n        } else if (this.isCollapsing() && this.closeQueued) {\n            // already queued. return early.\n            return;\n        }\n\n        // start: proceed with closing actions\n\n        // reset queued up flag\n        // dev todo: find a less public way of managing this flag\n        this.closeQueued = false;\n\n        // if open is invoked via event (e.g. click the button), then event will exist.\n        // if called independently, event will not exist.\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n\n        // set a jquery event listener to run ONCE on the Bootstrap \"is hidden\" event,\n        this.$sidepanel.one(\"hidden.bs.collapse\", whenTransitionEnds);\n\n        // manually set the duration so that closing transition uses a custom duration.\n        // this is overriding the default behavior, where duration is set by the css .collapsing class rule, and the same\n        // duration is used for both opening and closing.\n        let _duration;\n        switch(this.closeType) {\n            // case \"page\":\n                // dev todo: future expansion\n                /* falls through */\n            case \"fast\":\n                _duration = this.settings.durationHideFast;\n                this.closeType = \"normal\";  // reset\n                break;\n            default:\n                // = \"normal\"\n                _duration = this.settings.durationHide;\n        }\n        // access native DOM element within jquery object\n        this.$sidepanel[0].style.transitionDuration = _duration;\n\n        // initiate the hiding\n        this.hide();\n\n        // initiate the hiding of backdrop if truthy\n        if (this.backdrop) {\n            this.backdrop.hide();\n        }\n\n        // cleanup\n        document.removeEventListener(\"keyup\", this.handleKey);\n        document.body.classList.remove(this.settings.sidePanelIsOpenClass);\n    };\n\n    // future home of method to dispose of all the sidepanel.\n    // dev note: currently disabled. to be developed.\n    //     _proto.dispose = function() {\n    //         for (var prop in this) {\n    //             this[prop] = null;\n    //         }\n    //     };\n\n\n    // *****\n    // Backdrop\n    // the backdrop/overlay that is displayed when the sidepanel is open\n\n    // show the backdrop\n    // 'this' will be = Backdrop\n    Backdrop.prototype.show = function() {\n        this.element.classList.add(\"show\", \"fadein\");\n    };\n\n    // hide the backdrop\n    // 'this' will be = Backdrop\n    Backdrop.prototype.hide = function() {\n\n        // method to run when fadeout animation ends - cleans up, and hides the backdrop.\n        // because event is on backdrop, event.target is the backdrop - uses backdrop from there for simplicity\n        function whenAnimationEnds(e) {\n            e.target.classList.remove(\"show\");\n            // note: if eventlistener {once: true} is not available (browser support), then eventListener should be removed manually, e.g.:\n            // _backdrop.removeEventListener(\"animationend\", whenAnimationEnds, true);\n        }\n\n        // when the backdrop's animationend event fires, call method. only once, since the listener is added again when it displays again.\n        this.element.addEventListener(\"animationend\", whenAnimationEnds, {once: true, passive: true});\n        // remove \".fadein\" to activate the default animation (fadeout)\n        this.element.classList.remove(\"fadein\");\n    };\n\n    // Backdrop constructor\n    // @param: provide backdrop with access to the parent sidepanel object that is created...\n    function Backdrop(_sidepanel) {\n\n        // create the backdrop HTML element\n        function create(style) {\n            let el = document.createElement(\"div\");\n            el.className = \"backdrop\" + \" \" + style;\n            return el;\n        }\n\n        // insert the element into the document DOM (at bottom)\n        function insert(el) {\n            document.body.appendChild(el);\n        }\n\n        // construction\n        // create the backdrop DOM element and store it\n        this.element = create(_sidepanel.settings.backdropStyleClass);\n\n        // add backdrop to the page DOM\n        insert(this.element);\n    }\n\n    // end Backdrop\n    // *****\n\n    // SidePanel constructor\n    function SidePanelCollapse(options) {\n\n        let _settings = this.settings = defineSettings(defaults, options);\n\n        // (try to) select and store the main sidepanel element as jquery object\n        let _$sidepanel = this.$sidepanel = $(_settings.sidepanelElement);\n\n        // check if sidepanel exists on the page;\n        // if not, exit early.\n        // check length because this is a jquery object.\n        if (!this.$sidepanel.length) {\n            // no sidepanel :(\n            this.$sidepanel = false;\n            console.error(\"No SidePanel element could be found with the selector \\\"\"+ _settings.sidepanelElement + \"\\\".\");\n            console.warn(\"SidePanel was not created.\");\n            return false;\n        }\n\n        // sidepanel exists!\n        //\n        // begin: sidepanel initialization\n\n        // the open and close methods will be called as event listeners, and all of them need to access the correct 'this,'\n        // which is troublesome with event listeners.\n        // so, pre-bind them all up for convenience and sanity as the default\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n\n        // durationShow is a special case, because it is the one duration value that is set initially in the css.\n        // so if the configuration (options) have a custom value, then the css variable needs to be updated\n        if (_settings.durationShowIsCustom) {\n            this.$sidepanel[0].style.setProperty(\"--durationShow\", _settings.durationShow);\n        }\n\n        // add event listener for Bootstrap collapse \"show\" event\n        // - docs: https://getbootstrap.com/docs/4.3/components/collapse/#events\n        // - show.bs.collapse: This event fires immediately when the show instance method is called.\n        // uses jquery event (and not regular javascript) because Bootstrap uses jquery-land events.\n        this.$sidepanel.on(\"show.bs.collapse\", this.open);\n\n        // (try to) select and cache the close button element.\n        // note: assumes there is only one .sidepanel and only one close button within the sidepanel structure\n        this.sidepanelCloseButton = _settings.sidepanelCloseElement ? _$sidepanel[0].querySelector(_settings.sidepanelCloseElement) : false;\n        if (this.sidepanelCloseButton) {\n            // add persistent event listener for action on the close element\n            this.sidepanelCloseButton.addEventListener(\"click\", this.close, false);\n        } else {\n            // no close button found :(\n            // the sidepanel will be initialized, but maybe this isn't what is desired?\n            console.warn(\"SidePanel: no close button could be found with the selector \\\"\"+ _settings.sidepanelCloseElement + \"\\\".\");\n        }\n\n        // if enabled, create the backdrop element and add event listener\n        if (_settings.backdrop) {\n            this.backdrop = new Backdrop(this);\n            this.backdrop.element.addEventListener(\"click\", this.close, true);\n        } else {\n            this.backdrop = null;\n        }\n\n        // flag for which close type, and therefore duration, to use: normal, or fast\n        // dev todo: closeType could be kept private\n        this.closeType = \"normal\";  // default behavior when closing the sidepanel\n\n        // handle links:\n        // find all the links in the sidepanel and add an event on them\n        // in order to trap the links and implement custom behavior\n        if (_settings.handleLinks) {\n            let sidepanelLinks = this.$sidepanel[0].getElementsByTagName(\"a\"), ln = sidepanelLinks.length;\n            for (let i = 0; i < ln; i++) {\n                sidepanelLinks[i].addEventListener(\"click\", linkHandle().bind(this));\n            };\n        }\n\n        // end: sidepanel initialization\n    }\n\n    // initialize any elements 'automatically' based on existence of the data_selector attribute on an element.\n    // will create a page global \"SidePanel\" containing the instance(s) of the SidePanelCollapse object.\n    // presumes just one, which will be SidePanel[0], but who knows - maybe there can be multiple in the future.\n    function initOnData() {\n        window.SidePanel = [];\n        let list = document.querySelectorAll(data_selector);\n        list.forEach(function(element) {\n            SidePanel.push(new SidePanelCollapse(element.id));\n        });\n    }\n\n    if (document.readyState === \"loading\") {  // loading hasn't finished yet\n        document.addEventListener(\"DOMContentLoaded\", initOnData);\n    } else {  // already fired\n        initOnData();\n    }\n\n    return SidePanelCollapse;\n}));"],"file":"../SidePanelCollapse.js"}