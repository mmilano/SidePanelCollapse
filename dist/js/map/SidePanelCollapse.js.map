{"version":3,"file":"../SidePanelCollapse.js","names":["window","SidePanelCollapse","define","amd","module","exports","self","_proto","prototype","data_selector","el","document","querySelector","styles","getComputedStyle","sidePanelCloseDuration_normal","sidePanelCloseDuration_fast","defaults","sidePanelElement","sidePanelCloseElement","sidePanelIsOpenClass","durationShow","getPropertyValue","durationHide","durationHideFast","backdrop","backdropStyleClass","handleLinks","linkHandle","linkEvent","destination","e","location","preventDefault","closeType","$sidePanel","one","target","href","close","isCollapsing","classList","contains","handleKey","key","keyCode","show","collapse","hide","open","whenTransitionEnds","_this","undefined","addEventListener","body","add","settings","style","transitionDuration","closeQueued","_duration","removeEventListener","remove","Backdrop","element","whenAnimationEnds","once","passive","_sidePanel","create","styleClass","createElement","className","appendChild","options","defineSettings","Object","assign","durationShowIsCustom","sidepanelElement","_settings","_$sidePanel","$","length","console","error","warn","bind","setProperty","on","sidePanelCloseButton","sidePanelLinks","getElementsByTagName","ln","i","initOnData","SidePanel","list","querySelectorAll","forEach","push","id","readyState"],"sources":["SidePanelCollapse.js"],"sourcesContent":["/*! **********\n * SidePanelCollapse v1.5.0\n * A Bootstrap 4-based sidebar augmenting the \"collapse\" component to collapse horizontally,\n * and allow variable duration timings for the transitions\n *\n * Michel Milano\n * 2024\n * MIT License\n */\n\n/* jshint latedef: nofunc */\n/* globals define, self, SidePanel */\n\n// UMD template\n(function (window, SidePanelCollapse) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD\n        define([], SidePanelCollapse);\n    } else if (typeof module === \"object\" && module.exports) {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports, like Node.\n        module.exports = SidePanelCollapse();\n    } else {\n        // Browser global (root is window)\n        window.SidePanelCollapse = SidePanelCollapse();\n    }\n} (typeof self !== \"undefined\" ? self : this, function() {\n    \"use strict\";\n\n    /**\n     * convenience shorthand\n     * @const\n     */\n    const _proto = SidePanelCollapse.prototype;\n\n    /**\n     * default selector for creation of a sidepanel in the page via data attribute\n     * @const\n     */\n    const data_selector = \"[data-sidepanel-collapse]\";\n\n    /**\n     * default value\n     * check and cache if there is no sidePanel in the page so that error is not thrown\n     * @const\n     */\n    const el = document.querySelector(\".sidePanel\");\n\n     /**\n     * default value\n     * access the css variable values as the element is instantiated\n     * @const\n     */\n    const styles = el ? getComputedStyle(el) : \"\";\n\n    /**\n    * sidePanel closing duration built in choices\n    * \"normal\" = regular close speed\n    * \"fast\"   = faster closing speed\n    */\n    const sidePanelCloseDuration_normal = \"normal\";\n    const sidePanelCloseDuration_fast = \"fast\";\n\n    /**\n    * sidePanel default settings\n    * @const\n    * @property {string} sidePanelElement - top-level element of the side-panel. CSS format\n    * @property {string} sidePanelCloseElement - close button element. CSS format\n    * @property {string} sidePanelIsOpenClass - class to apply when panel is open. CSS format\n    * @property {string} durationShow - duration for the opening transition. CSS format\n    * @property {string} durationHide - duration for the standard closing transition.. CSS format\n    * @property {string} durationHideFast - duration for FAST closing transition. CSS format\n    * @property {boolean} backdrop - whether or not backdrop is to be used\n    * @property {string} backdropStyleClass - Which style of backdrop to use, corresponding to a CSS class style. Built-in classes are \"light\" or \"dark\".\n    * @property {boolean} handleLinks - whether or not links are to be processed\n    */\n\n    // defaults\n    // these values can be overridden on intialization\n    const defaults = {\n        // css selectors:\n        // default selectors for the sidePanel DOM elements\n        sidePanelElement: \"#sidePanel\", // top-level of the side-panel element in the DOM. CSS format\n        sidePanelCloseElement: \".sidePanel-close\", // the close button, containing the close icon, visible when the sidePanel is displayed. CSS format.\n\n        // HTML class attribute:\n        // class that is added to the document's <body> element when sidePanel shows, removed when it hides.\n        // this is a convenience - for use in enabling any specific styles that should apply when sidePanel is open.\n        sidePanelIsOpenClass: \"sidePanel-open\", // javascript format\n\n        // extract and update the css transition values:\n        // doing this so that the duration values do not have to be repeated in the javascript,\n        // and there is only one declaration (e.g. if the defaults are changed).\n        // if these are defined as .js values instead, the durations need to be in seconds (css transition format)\n        //\n        // css transition-durations:\n        // default values for the sidePanel transition timings are in css transition-duration format. e.g.:\n        //     durationShow: \"1.65s\",  // leisurely opening\n        durationShow: styles.getPropertyValue(\"--durationShow\"),\n        durationHide: styles.getPropertyValue(\"--durationHide\"),\n        durationHideFast: styles.getPropertyValue(\"--durationHideFast\"),\n\n        // boolean:\n        // whether or not a backdrop, or overlay, should display behind the sidePanel\n        backdrop: true,\n\n        // HTML class attribute:\n        // which color style of backdrop to use: \"dark\", or \"light\".\n        // corresponds to the css styles (e.g. \"light\" -> \".light\")\n        backdropStyleClass: \"light\",  // javascript format\n\n        // boolean:\n        // whether sidePanel should enable special behavior for <a> links in the sidePanel content.\n        // currently, the behavior is to intercept the link click, close the sidePanel using the HideFast duration, and then follow the link\n        handleLinks: true,\n    };\n\n    /**\n     * link callback:\n     * when a link is clicked,\n     * close the panel - fast mode.\n     * then, when panel is closed, go to destination of link.\n     * @returns {Function} event handler\n     */\n    function linkHandle() {\n        function linkEvent(destination) {\n            return function (e) {\n                // ...if anything needs to be done with e here...\n                window.location = destination;\n            };\n        }\n\n        // return function. used for the link eventListener\n        return function (e) {\n            e.preventDefault();\n            this.closeType = sidePanelCloseDuration_fast;\n            // create link event handler\n            this.$sidePanel.one(\"hidden.bs.collapse\", linkEvent(e.target.href));\n            this.close();\n        };\n    }\n\n    // determine if the sidepanel is currently transitioning or not\n    // '.collapsing' is applied to the element by Bootstrap during the transition, removed when finished\n    _proto.isCollapsing = function () {\n        return this.$sidePanel[0].classList.contains(\"collapsing\");\n    };\n\n    // key press handler\n    // when the sidenav is displayed (open), ESC will close.\n    // expects: invoked as event callback, with .bind(the main sidepanel object) (i.e. .bind(this))\n    // (which is done as the default in constructor)\n    _proto.handleKey = function (e) {\n        let key = e.keyCode;\n\n        switch (key) {\n            case 27: // 'esc'\n                this.close(e);\n                break;\n        }\n    };\n\n    // manually activate the 'show' action\n    _proto.show = function () {\n        this.$sidePanel.collapse(\"show\"); // invoke Bootstrap action in jquery land\n    };\n\n    // manually activate the 'hide' action\n    _proto.hide = function () {\n        this.$sidePanel.collapse(\"hide\"); // invoke Bootstrap action in jquery land\n    };\n\n    // OPEN the sidepanel\n    // expects to be called with this = the sidepanel object (e.g. via .bind(this))\n    // (which is done as the default in constructor)\n    _proto.open = function (e) {\n        // return a function as the event handler\n        // of things to do when when the sidebar opening is completed.\n        // presumes: event is on the sidepanel DOM element itself.\n        function whenTransitionEnds(_this) {\n            // no action currently\n            // let handler = function (e) {};\n            return (() => {});\n        }\n\n        // if open is invoked via default bootstrap behavior, then .collapse(\"show\") will have been invoked by bootstrap already,\n        // and event will exist (e.g. click).\n        // if called programmatically, e will not exist, and \"show\" will need to be called manually.\n        // dev todo: there might be a better way to do this\n        if (e === undefined) {\n            this.show();\n        }\n\n        // initiate the showing of backdrop if truthy\n        if (this.backdrop) {\n            this.backdrop.show(this.$sidePanel);\n        }\n\n        // set keyup event handler - to catch ESC key and close sidePanel if pressed\n        document.addEventListener(\"keyup\", this.handleKey);\n\n        // jquery event listener to run ONCE on the Bootstrap \"is shown\" event\n        this.$sidePanel.one(\"shown.bs.collapse\", whenTransitionEnds(this));\n\n        // add a class to the document's <body>.\n        // for potential use to enable any styles to apply only when sidepanel is open\n        document.body.classList.add(this.settings.sidePanelIsOpenClass);\n    };\n\n    // CLOSE the sidepanel\n    // usually invoked as event callback\n    // expects to be called with this = the sidepanel object (e.g. via .bind(this))\n    // (which is done as the default in constructor)\n    _proto.close = function (e) {\n        // event handler:\n        // when hiding/closing is complete, remove the transition duration override so that\n        // the fallback, css-defined duration, will apply when the sidebar is shown/opened again.\n        // presumes event is on the sidenav DOM element itself.\n        const whenTransitionEnds = (e) => {\n            e.target.style.transitionDuration = null;\n        };\n\n        // check to see if collapsing is in progress.\n        // if so, interrupt the normal close process, reroute via event, and exit early,\n        // so that when the transition is finished, it will then go and immediately start to close\n        if (this.isCollapsing() && !this.closeQueued) {\n            // not already queued, so queue up to close immediately when transition has finished, and return out.\n            this.closeQueued = true;\n            this.closeType = sidePanelCloseDuration_fast;\n            this.$sidePanel.one(\"shown.bs.collapse\", this.close);\n            return;\n        } else if (this.isCollapsing() && this.closeQueued) {\n            // already queued. return early.\n            return;\n        }\n\n        // start: proceed with closing actions\n\n        // reset queued up flag\n        // dev todo: find a less public way of managing this flag\n        this.closeQueued = false;\n\n        // if open is invoked via event (e.g. click the button), then event will exist.\n        // if called independently, event will not exist.\n        if (e !== undefined) {\n            e.preventDefault();\n        }\n\n        // set a jquery event listener to run ONCE on the Bootstrap \"is hidden\" event,\n        this.$sidePanel.one(\"hidden.bs.collapse\", whenTransitionEnds);\n\n        // manually set the duration so that closing transition uses a custom duration.\n        // this is overriding the default behavior, where duration is set by the css .collapsing class rule, and the same\n        // duration is used for both opening and closing.\n        let _duration;\n        switch (this.closeType) {\n            // case \"page\":\n            // dev todo: future expansion\n            /* falls through */\n            // case \"fast\":\n            case sidePanelCloseDuration_normal:\n                _duration = this.settings.durationHideFast;\n                this.closeType = sidePanelCloseDuration_normal; // reset\n                break;\n            default:\n                // = \"normal\"\n                _duration = this.settings.durationHide;\n        }\n        // access native DOM element within jquery object\n        this.$sidePanel[0].style.transitionDuration = _duration;\n\n        // initiate the hiding\n        this.hide();\n\n        // initiate the hiding of backdrop if truthy\n        if (this.backdrop) {\n            this.backdrop.hide();\n        }\n\n        // cleanup\n        document.removeEventListener(\"keyup\", this.handleKey);\n        document.body.classList.remove(this.settings.sidePanelIsOpenClass);\n    };\n\n    // *****\n    // Backdrop\n    // = the backdrop/overlay that is displayed when the sidepanel is open\n\n    /**\n     * backdrop: show the backdrop\n     * 'this' will be = Backdrop\n     */\n    Backdrop.prototype.show = function () {\n        this.element.classList.add(\"show\", \"fadein\");\n    };\n\n    /**\n     * backdrop: hide the backdrop\n     * 'this' will be = Backdrop\n     */\n    Backdrop.prototype.hide = function () {\n        /**\n         * method to run when fadeout animation ends - cleans up, and hides the backdrop.\n         * because event is on backdrop, event.target is the backdrop - uses backdrop from there for simplicity\n         * @param {*} e event\n         */\n        const whenAnimationEnds = (e) => {\n            e.target.classList.remove(\"show\");\n        };\n\n        // when the backdrop's animationend event fires, call method. only once, since the listener is added again when it displays again.\n        this.element.addEventListener(\"animationend\", whenAnimationEnds, {once: true, passive: true});\n        // remove \".fadein\" to activate the default animation (fadeout)\n        this.element.classList.remove(\"fadein\");\n    };\n\n    // Backdrop constructor\n    // @param: provide backdrop with access to the parent sidePanel object that is created...\n    function Backdrop(_sidePanel) {\n        // create the backdrop HTML element\n        const create = (styleClass) => {\n            let el = document.createElement(\"div\");\n            el.className = \"sidePanel-backdrop\" + \" \" + styleClass;\n            return el;\n        };\n\n        // construction\n        // create the backdrop DOM element and store it\n        this.element = create(_sidePanel.settings.backdropStyleClass);\n\n        // add backdrop to the document DOM (at bottom)\n        document.body.appendChild(this.element);\n    }\n\n    // end Backdrop\n    // *****\n\n    /**\n     * SidePanel constructor\n     * @param {Object} options custom settings that can be passed to the instance\n     * @returns\n     */\n    function SidePanelCollapse(options) {\n\n        /**\n         * internal method\n         * make one single set of settings from defaults and any options passed in on construction\n         * @param {Object} defaults defaults settings\n         * @param {*} options any custom settings\n         * @returns {Object} settings\n         */\n        function defineSettings(defaults, options) {\n            // start with the defaults\n            // let settings = Object.assign({}, defaults);\n            // reconcile with any provided options that will supercede/overwrite defaults\n            // Object.assign(settings, options);\n            let settings = Object.assign(defaults, options);\n\n            // if backdrop is anything other than \"true\", it is false\n            settings.backdrop = settings.backdrop === true ? true : false;\n\n            // create a flag for the durationShow setting because it is a special case.\n            // see SidePanelCollapse constructor.\n            settings.durationShowIsCustom = options !== undefined && options.durationShow !== undefined ? true : false;\n\n            return settings;\n        }\n\n        /**\n         * options passed in can be\n         * either\n         * empty: use the defaults,\n         * or\n         * string: the HTML ID of the sidepanel element\n         * or\n         * object: an object of multiple custom properties to use as override settings\n         */\n\n        // if string, then convert it to an object so that settings work\n        if (typeof options === \"string\") {\n             // string will be a the element's identifier in javascript format, not css format.\n             // construct css format\n            options = {sidepanelElement: \"#\" + options};\n        }\n\n        // create settings\n        // and cache in temp variable for easier management\n        const _settings = (this.settings = defineSettings(defaults, options));\n\n        // (try to) select and store the main sidepanel element\n        // as jquery object\n        const _$sidePanel = (this.$sidePanel = $(_settings.sidePanelElement));\n\n        // check if sidepanel exists on the page and was selected.\n        // if not, exit early.\n        // check length because it is a jquery object; element will be [0]\n        if (!this.$sidePanel.length) {\n            // no sidepanel :(\n            this.$sidePanel = false;\n            console.error('No SidePanel element could be found with the selector \"' + _settings.sidepanelElement + '\".');\n            console.warn(\"SidePanel was not created.\");\n            return false;\n        }\n\n        // sidePanel exists!\n        //\n        // begin: sidePanel initialization\n\n        // the open and close methods will be called as event listeners, and all of them need to access the correct 'this,'\n        // which is troublesome with event listeners.\n        // so, pre-bind them all up for convenience and sanity as the default\n        this.open = this.open.bind(this);\n        this.close = this.close.bind(this);\n        this.handleKey = this.handleKey.bind(this);\n\n        // durationShow is a special case, because it is the one duration value that is set initially in the css.\n        // so if the configuration (options) have a custom value, then the css variable needs to be updated\n        if (_settings.durationShowIsCustom) {\n            this.$sidePanel[0].style.setProperty(\"--durationShow\", _settings.durationShow);\n        }\n\n        // add event listener for Bootstrap collapse \"show\" event\n        // - docs: https://getbootstrap.com/docs/4.6/components/collapse/#events\n        // - show.bs.collapse: This event fires immediately when the show instance method is called.\n        // uses jquery event (and not regular javascript) because Bootstrap uses jquery-land events.\n        this.$sidePanel.on(\"show.bs.collapse\", this.open);\n\n        // (try to) select and cache the close button element.\n        // note: assumes there is only one .sidePanel and only one close button within the sidePanel structure\n        this.sidePanelCloseButton = _settings.sidePanelCloseElement ? _$sidePanel[0].querySelector(_settings.sidePanelCloseElement) : false;\n        if (this.sidePanelCloseButton) {\n            // add persistent event listener for action on the close element\n            this.sidePanelCloseButton.addEventListener(\"click\", this.close, false);\n        } else {\n            // no close button found :(\n            // the sidepanel will be initialized, but log warning in case this isn't what is desired?\n            console.warn('SidePanel: no close element could be found with the selector \"' + _settings.sidePanelCloseElement + '\".');\n        }\n\n        // if enabled, create the backdrop element and add event listener\n        if (_settings.backdrop) {\n            this.backdrop = new Backdrop(this);\n            this.backdrop.element.addEventListener(\"click\", this.close, true);\n        } else {\n            this.backdrop = null;\n        }\n\n        // flag for which close type, and therefore duration, to use: normal, or fast\n        this.closeType = sidePanelCloseDuration_normal; // default behavior when closing the sidepanel\n\n        // handle links:\n        // find all the links in the sidepanel and add an event on them\n        // in order to trap the links and implement custom behavior.\n        // note: this.$sidePanel[0] is the native HTML element in the jquery object\n        if (_settings.handleLinks) {\n            const sidePanelLinks = this.$sidePanel[0].getElementsByTagName(\"a\");\n            const ln = sidePanelLinks.length;\n            for (let i = 0; i < ln; i++) {\n                sidePanelLinks[i].addEventListener(\"click\", linkHandle().bind(this));\n            }\n        }\n\n        // end: sidepanel initialization\n    }\n\n    /**\n     * initialize sidepanel 'automatically' based on existence of the data_selector attribute on an element.\n     * creates a page global \"SidePanel\" containing the instance(s) of the SidePanelCollapse object.\n     */\n    function initOnData() {\n        window.SidePanel = [];\n        const list = document.querySelectorAll(data_selector);\n        list.forEach((element) => {\n            SidePanel.push(new SidePanelCollapse(element.id));\n        });\n    }\n\n    /**\n     * on load/parse,\n     * either\n     * initialze the sidepanel when DOMContentLoaded event is fired,\n     * or, if already fired,\n     * then initialize now\n     */\n\n    if (document.readyState === \"loading\") {\n        // loading hasn't finished yet\n        document.addEventListener(\"DOMContentLoaded\", initOnData);\n    } else {\n        // already fired\n        initOnData();\n    }\n\n    return SidePanelCollapse;\n}));"],"mappings":"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","ignoreList":[]}